package org.exoplatform.selenium.platform.portal.func.account;

import org.exoplatform.selenium.platform.portal.func.account.AccountHelpers;
//import org.openqa.selenium.Keys;
//import org.openqa.selenium.StaleElementReferenceException;
//import org.openqa.selenium.WebElement;
//import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.AfterGroups;
import org.testng.annotations.BeforeGroups;
import org.testng.annotations.Test;

public class Demo extends AccountHelpers{
	String nametest="test_demo_exo";
	String namepassword = "test_prl_0123";
	String confirmpassword = "test_prl_0123";
	String firstname ="testprl";
	String lastname  ="testprlExo";
	String email="test_prl_123456@local.com";
	
	
	@BeforeGroups(groups = {"platform"})
	public void beforeTest() throws Exception {
		driver = new FirefoxDriver();
    	actions = new Actions(driver);
    	baseUrl = "http://localhost:8080";
    	driver.get(baseUrl + "/portal/intranet/");
    	pause(3000);
    	
		/*String browser = System.getProperty("browser");
		if(browser.equals("chrome")){
			driver = new ChromeDriver();
		} else {
			driver = new FirefoxDriver();
		}
		baseUrl = System.getProperty("baseUrl");
		pause(3000);*/
		
	}

	@AfterGroups(groups = {"platform"})
	public void afterTest() throws Exception {
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			Assert.fail(verificationErrorString);
		}
	}
	
	@Test(groups = {"platform", "demo"})
	public void demoLogin() throws Exception{
		//driver.get(baseUrl + "");
		//pause(3000);
		/*signInAsRoot();
		pause(2000);
		
		goToUsersAndGroupsManagement();
		chooseGroupTab();
		
		addGroup("testexo1", "testlabel","example", true);
		pause(3000);
		selectGroup("testlabel");*/
		
		//editGroup("testlabel", true);
		//deleteGroup("testlabel", true);
		/*pause(3000);
		addUsersToGroup("demo","member",true,true);
		pause(3000);*/
		/*goToNewStaff();
		pause(2000);
				
		addNewUserAccount(nametest, namepassword, confirmpassword, firstname, 
				lastname, email, "", "English", true);
		pause(2000);
		
		goToUsersAndGroupsManagement();
		searchUser(nametest, "User Name");
		pause(2000);
		editUser(nametest);
		pause(2000);*/
		
		/*deleteUser(nametest);
		pause(3000);*/
		//signOut();

	}
	@Test(groups = {"platform", "demotest"})
	public void demotest(){
		signInAsRoot();
		pause(2000);
		
		goToUsersAndGroupsManagement();
		pause(2000);
		addMembership("test", "test membership type", true);
		pause(2000);
		signOut();
		pause(2000);
		signInAsRoot();
		goToUsersAndGroupsManagement();
		chooseMembershipTab();
		pause(2000);
		editMembership("test", "testEdit membership type");
		pause(2000);
		signOut();
		
	}
	/*@Test
	public void pausetest(long timeinMillis ){
		try {
			Thread.sleep(timeinMillis);
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
				
	}
	@Test
	public void deleteCache(){
		Actions doClearCache = new Actions(driver);
		doClearCache.sendKeys(Keys.CONTROL).sendKeys(Keys.F5).build().perform();		
	}*/
	
	
}
