package org.exoplatform.selenium.platform.portal.func.account;

import org.exoplatform.selenium.platform.portal.PortalBase;

import org.openqa.selenium.Keys;
import org.openqa.selenium.WebElement;
//import org.openqa.selenium.interactions.Actions;

public class AccountHelpers extends PortalBase {

	public static void addNewUserAccount(String username, String password, String confirmPassword, String firstName, 
            String lastName, String email, String userNameGiven, String language, boolean verify) {
        
		System.out.println("--Create new user using \"New Staff\" portlet--");
		type(ELEMENT_INPUT_USERNAME, username, true);
		type(ELEMENT_INPUT_PASSWORD, password, true);
		type(ELEMENT_INPUT_CONFIRM_PASSWORD, confirmPassword, true);
		type(ELEMENT_INPUT_FIRSTNAME, firstName, true);
		type(ELEMENT_INPUT_LASTNAME, lastName, true);
		type(ELEMENT_INPUT_EMAIL, email, true);
		click(ELEMENT_USER_PROFILE_TAB);
		waitForTextPresent("Given Name:");
		type(ELEMENT_INPUT_USER_NAME_GIVEN, userNameGiven, true);
		select(ELEMENT_SELECT_USER_LANGUAGE, language);
		click(ELEMENT_ACCOUNT_SETTING_TAB);
		save();
	
		if (verify) {
			waitForMessage("You have registered a new account.");
			closeMessageDialog();
		}
		
		
	}
	
	public static void goToUsersAndGroupsManagement() {
	        System.out.println("--Go to Users and groups management--");
	        goToPage(ELEMENT_LINK_SetUp, ELEMENT_LINK_SetUp, ELEMENT_LINK_Users, ELEMENT_LINK_USERS_MANAGEMENT);
	    }
	
    public static void deleteUser(String username) {
			String userDeleteIcon = ELEMENT_USER_DELETE_ICON.replace("${username}", username);
			
			System.out.println("--Deleting user " + username + "--");
			if (isTextPresent("Total pages")) {
	            usePaginator(userDeleteIcon, "User " + username + "not found in group");
			}
	        pause(500);
			click(userDeleteIcon);
			waitForConfirmation("Are you sure to delete user " + username + "?");
			waitForTextNotPresent(username);
	        click(ELEMENT_SEARCH_ICON_USERS_MANAGEMENT);
		}
    
    public static void rightClickAndCopyPaste(String Source, String value, String Target){
  	  
  	  WebElement element=waitForAndGetElement(Source);
  	  element.sendKeys(value);
  	  actions.doubleClick(element).perform();
  	  actions.contextClick(element).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ENTER).build().perform();
  	  pause(3000);
  	  WebElement element1=waitForAndGetElement(Target);
  	  actions.contextClick(element1).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.ARROW_DOWN).sendKeys(Keys.RETURN).build().perform();
  	  pause(3000);
     	

    }
	
}
