package org.exoplatform.selenium.platform.portal.func.account;


import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.AfterGroups;
import org.testng.annotations.BeforeGroups;
import org.testng.annotations.Test;

import org.exoplatform.selenium.platform.portal.func.account.AccountHelpers;

public class Test_PLT_ACC_011_012_013_014 extends AccountHelpers{
	@BeforeGroups(groups = {"platform"})
	public void beforeTest() throws Exception {
		driver = new FirefoxDriver();
    	actions = new Actions(driver);
    	baseUrl = "http://localhost:8080";
    	driver.get(baseUrl + "/portal/intranet/");
    	pause(3000);
	}

	@AfterGroups(groups = {"platform"})
	public void afterTest() throws Exception {
		driver.quit();
		String verificationErrorString = verificationErrors.toString();
		if (!"".equals(verificationErrorString)) {
			Assert.fail(verificationErrorString);
		}
	}
	@Test(groups = {"platform", "account"})
	public void testPLT_ACC_011_012_013_014(){
		signIn("john","gtn");
		pause(3000);
		goToNewStaff();
		pause(3000);
		addNewAccountAtNewStaff("test_prlexo23345", "test_prl", "test_prl_0123", "testprl", 
				"testprlExo", "test_prl2345@localhost.com", "", "English", false);
		waitForMessage("Password and Confirm Password must be the same.");
		closeMessageDialog();
		//System.out.println("-- Create new account when copy from Password and paste to Confirm Password field --");
		log("-- Create new account when copy from Password and paste to Confirm Password field --");
		type(ELEMENT_INPUT_USERNAME, "test_exo456", true);
		type(ELEMENT_INPUT_PASSWORD, "test_prl", true);
		//copy(ELEMENT_INPUT_PASSWORD, ELEMENT_INPUT_CONFIRM_PASSWORD);
		
		type(ELEMENT_INPUT_FIRSTNAME, "first", true);
		type(ELEMENT_INPUT_LASTNAME, "lastName", true);
		type(ELEMENT_INPUT_EMAIL, "exo3333@localhost.com", true);
		save();
		waitForMessage("Password and Confirm Password must be the same.");
		pause(1000);
		closeMessageDialog();
	}
}
