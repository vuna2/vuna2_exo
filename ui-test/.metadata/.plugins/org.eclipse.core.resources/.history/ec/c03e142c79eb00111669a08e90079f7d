package org.exoplatform.selenium.platform.portal.func.account;

import org.exoplatform.selenium.platform.portal.func.account.AccountHelpers;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.interactions.Actions;
import org.testng.Assert;
import org.testng.annotations.*;

public class Test_PLT_ACC_010 extends AccountHelpers{
		@BeforeTest
	    public void setUpBeforeTest(){
	    	driver = new FirefoxDriver();
	    	actions = new Actions(driver);
	    	baseUrl = "http://localhost:8080";
	    	driver.get(baseUrl + "/portal/intranet/");
	    	pause(3000);
	    }
	    @AfterTest
	    public void afterTest(){
	    	driver.quit();
	        String verificationErrorString = verificationErrors.toString();
	        if (!"".equals(verificationErrorString)) {
	          Assert.fail(verificationErrorString);
	        }
	    }
		//groups = {"Account", "Test_PLT_ACC_010"}
		@Test(groups="Account")
		public void testPLT_ACC_010(){
			System.out.println("-- Create new user with lower case--");
	        	
			signInAsRoot();
			pause(3000);
			goToNewStaff();
			pause(3000);
			addNewAccountAtNewStaff("test_prl_exo1212", "test_prl_0123", "test_prl_0123", "testprl", 
					"testprlExo", "test_prl_12345@localhost.com", "", "English", true);
		
			System.out.println("-- Check Availability function when new account's user name is existing --");
			type(ELEMENT_INPUT_USERNAME, "test_prl_exo1212", true);
			click(ELEMENT_SEARCH_ICON_REGISTER);
			waitForMessage("This username already exists, please enter another one.");
			closeMessageDialog();

			System.out.println("-- Check Availability function when new account's user name does not exist--");
			type(ELEMENT_INPUT_USERNAME, "test1608", true);
			click(ELEMENT_SEARCH_ICON_REGISTER);
			waitForMessage("This username is available.");
			closeMessageDialog();
			
			System.out.println("-- Check Availability function when new account's user name is the same with deleted account's user name --");
			goToUsersAndGroupsManagement();
			pause(3000);
			deleteUser("test_prl_exo1212");
			
			pause(3000);
			goToNewStaff();
			type(ELEMENT_INPUT_USERNAME, "test_prl_exo1212", true);
			click(ELEMENT_SEARCH_ICON_REGISTER);
			waitForMessage("This username is available.");
			closeMessageDialog();
			
			System.out.println("-- Check Availability function when new account's user name is blank--");	
			type(ELEMENT_INPUT_USERNAME, "", true);
			click(ELEMENT_SEARCH_ICON_REGISTER);
			pause(3000);
			waitForMessage("The field \"User Name:\" is required.");
			closeMessageDialog();
			pause(3000);
			signOut();
			
		}
	
}
